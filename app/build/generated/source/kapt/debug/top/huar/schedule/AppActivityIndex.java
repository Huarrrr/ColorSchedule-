package top.huar.schedule;

import org.greenrobot.eventbus.meta.SimpleSubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberMethodInfo;
import org.greenrobot.eventbus.meta.SubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberInfoIndex;

import org.greenrobot.eventbus.ThreadMode;

import java.util.HashMap;
import java.util.Map;

/** This class is generated by EventBus, do not edit. */
public class AppActivityIndex implements SubscriberInfoIndex {
    private static final Map<Class<?>, SubscriberInfo> SUBSCRIBER_INDEX;

    static {
        SUBSCRIBER_INDEX = new HashMap<Class<?>, SubscriberInfo>();

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.ShareActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.fragment.CheckScoreFragment.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.service.RemindService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class,
                    ThreadMode.BACKGROUND),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.AboutActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.SettingActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.service.CommonService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.fragment.checkscore.CheckScoreLoginFragment.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", Integer.class, ThreadMode.BACKGROUND),
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.CustomActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.MainActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.LoginActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onMessageEvent", Integer.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.fragment.TodayFragment.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.activity.SplashActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.fragment.ThisWeekFragment.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.ui.fragment.ClassScheduleFragment.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.service.CourseInfoService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(top.huar.schedule.service.TodayWidgetService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onMessageEvent", top.huar.schedule.entity.EventEntity.class, ThreadMode.MAIN),
        }));

    }

    private static void putIndex(SubscriberInfo info) {
        SUBSCRIBER_INDEX.put(info.getSubscriberClass(), info);
    }

    @Override
    public SubscriberInfo getSubscriberInfo(Class<?> subscriberClass) {
        SubscriberInfo info = SUBSCRIBER_INDEX.get(subscriberClass);
        if (info != null) {
            return info;
        } else {
            return null;
        }
    }
}
